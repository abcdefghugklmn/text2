package aa;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

//用户类，用于存储用户信息
		class User {
		    String cardNum; // 卡号
		    String password; // 密码
		    String name; // 姓名
		    double balance; // 余额

		    // 构造函数
		    public User(String cardNum, String password, String name, double balance) {
		        this.cardNum = cardNum;
		        this.password = password;
		        this.name = name;
		        this.balance = balance;
		    }

		    // 打印用户信息
		    public String toString() {
		        return "卡号：" + this.cardNum + "\n" +
		                "姓名：" + this.name + "\n" +
		                "余额：" + this.balance + "\n";
		    }
		}

		// ATM机类，用于处理用户交互
		class ATM {
		    private Scanner scanner; // 输入流
		    private String cardNum; // 当前登录用户的卡号
		    private User currentUser; // 当前登录用户

		    // 构造函数
		    public ATM() {
		        scanner = new Scanner(System.in); // 初始化输入流
		    }

		    // 启动ATM机
		    public void run() {
		        // 显示欢迎信息
		        System.out.println("欢迎使用ATM机！");
		        System.out.println("-------------------");
		        
		        // 登录
		        while (true) {
		            System.out.print("请输入卡号：");
		            String cardNum = scanner.nextLine();
		            System.out.print("请输入密码：");
		            String password = scanner.nextLine();

		            if (login(cardNum, password)) { // 登录成功
		                break;
		            } else { // 登录失败
		                System.out.println("卡号或密码不正确，请重新输入！");
		            }
		        }

		        // 显示主菜单
		        while (true) {
		            System.out.println("-------------------");
		            System.out.println("请选择以下操作：");
		            System.out.println("1. 查询余额");
		            System.out.println("2. 取款");
		            System.out.println("3. 存款");
		            System.out.println("4. 修改密码");
		            System.out.println("0. 退出");
		            System.out.print("请输入操作编号：");

		            String choice = scanner.nextLine();

		            switch (choice) {
		                case "1":
		                    inquire(); // 查询余额
		                    break;
		                case "2":
		                    withdraw(); // 取款
		                    break;
		                case "3":
		                    deposit(); // 存款
		                    break;
		                case "4":
		                    modifyPassword(); // 修改密码
		                    break;
		                case "0":
		                    System.out.println("欢迎再次使用ATM机！");
		                    return;
		                default:
		                    System.out.println("输入有误，请重新输入！");
		                    break;
		            }
		        }
		    }

		    // 登录，返回是否登录成功
		    public boolean login(String cardNum, String password) {
		        // 读取用户信息文件
		        File file = new File("users.txt");

		        try {
		            @SuppressWarnings("resource")
					Scanner fileScanner = new Scanner(file);

		            while (fileScanner.hasNextLine()) {
		                String line = fileScanner.nextLine();
		                String[] fields = line.split(",");
		                if (fields[0].equals(cardNum) && fields[1].equals(password)) { // 找到匹配用户
		                    // 初始化用户信息
		                    this.setCardNum(cardNum);
		                    this.currentUser = new User(cardNum, password, fields[2], Double.parseDouble(fields[3]));

		                    System.out.println("-------------------");
		                    System.out.println("登录成功，欢迎" + currentUser.name + "！");
		                    return true;
		                }
		            }

		            fileScanner.close();
		        } catch (IOException e) {
		            e.printStackTrace();
		        }

		        return false; // 登录失败
		    }

		    // 查询余额
		    public void inquire() {
		        System.out.println("-------------------");
		        System.out.println(currentUser.toString());
		    }

		    // 取款
		    public void withdraw() {
		        System.out.println("-------------------");
		        System.out.println("请输入取款金额（50、100的倍数，总额不超过5000元，支取金额不允许透支）：");
		        String amountStr = scanner.nextLine();
		        int amount = Integer.parseInt(amountStr);

		        if (amount % 50 != 0 || amount > 5000) { // 非法金额
		            System.out.println("非法金额！");
		            return;
		        }

		        if (amount > currentUser.balance) { // 余额不足
		            System.out.println("余额不足！");
		            return;
		        }

		        // 更新余额
		        currentUser.balance -= amount;

		        // 记录交易记录
		        File file = new File("transactions.txt");
		        try {
		            FileWriter writer = new FileWriter(file, true);
		            writer.write(currentUser.cardNum + "," + amount + "," + "withdraw" + "\n");
		            writer.close();
		        } catch (IOException e) {
		            e.printStackTrace();
		        }

		        System.out.println("取款成功，当前余额：" + currentUser.balance);
		    }

		    // 存款
		    public void deposit() {
		        System.out.println("-------------------");
		        System.out.println("请输入存款金额（不允许出现负存款）：");
		        String amountStr = scanner.nextLine();
		        int amount = Integer.parseInt(amountStr);

		        if (amount < 0) { // 非法金额
		            System.out.println("非法金额！");
		            return;
		        }

		        // 更新余额
		        currentUser.balance += amount;

		        // 记录交易记录
		        File file = new File("transactions.txt");
		        try {
		            FileWriter writer = new FileWriter(file, true);
		            writer.write(currentUser.cardNum + "," + amount + "," + "deposit" + "\n");
		            writer.close();
		        } catch (IOException e) {
		            e.printStackTrace();
		        }

		        System.out.println("存款成功，当前余额：" + currentUser.balance);
		    }

		    // 修改密码
		    public void modifyPassword() {
		        System.out.println("-------------------");
		        System.out.print("请输入旧密码：");
		        String oldPassword = scanner.nextLine();

		        if (!oldPassword.equals(currentUser.password)) { // 旧密码不正确
		            System.out.println("旧密码不正确！");
		            return;
		        }

		        while (true) {
		            System.out.print("请输入新密码：");
		            String newPassword = scanner.nextLine();

		            if (newPassword.length() ==6) { // 密码过短
		                System.out.println("密码过短，请重新输入！");
		            } else if (newPassword.equals(oldPassword)) { // 新旧密码相同
		                System.out.println("新密码不能与旧密码相同，请重新输入！");
		            } else if (newPassword.matches("^\\d{6}$")) { // 新密码符合要求
		            	
		            	
		            	
		                System.out.print("请再次输入新密码：");
		                String newPassword2 = scanner.nextLine();

		                if (newPassword.equals(newPassword2)) { // 两次输入相同
		                    // 更新用户信息文件
		                    File file = new File("users.txt");

		                    try {
		                        Scanner fileScanner = new Scanner(file);
		                        StringBuilder fileContent = new StringBuilder();

		                        while (fileScanner.hasNextLine()) {
		                            String line = fileScanner.nextLine();
		                            String[] fields = line.split(",");
		                            if (fields[0].equals(currentUser.cardNum)) { // 找到匹配用户
		                                fields[1] = newPassword; // 更新密码
		                                line = String.join(",", fields);
		                            }
		                            fileContent.append(line + "\n");
		                        }

		                        fileScanner.close();

		                        FileWriter writer = new FileWriter(file, false);
		                        writer.write(fileContent.toString());
		                        writer.close();

		                        // 更新当前用户信息
		                        currentUser.password = newPassword;

		                        System.out.println("密码修改成功！");
		                        return;
		                    } catch (IOException e) {
		                        e.printStackTrace();
		                    }
		                } else { // 两次输入不同
		                    System.out.println("两次输入不同，请重新输入！");
		                }
		            } else { // 新密码不符合要求
		                System.out.println("新密码不符合要求！");
		            }
		        }
		    }

			public String getCardNum() {
				return cardNum;
			}

			public void setCardNum(String cardNum) {
				this.cardNum = cardNum;
			}
		}
public class aaa {

	public static void main(String[] args) {
		// TODO 自动生成的方法存根
		ATM atm = new ATM();
        atm.run();
	}

}
